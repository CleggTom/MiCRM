var documenterSearchIndex = {"docs":
[{"location":"pages/overview/#Basic-Usage","page":"Basic Usage","title":"Basic Usage","text":"","category":"section"},{"location":"pages/overview/#Introduction","page":"Basic Usage","title":"Introduction","text":"","category":"section"},{"location":"pages/overview/","page":"Basic Usage","title":"Basic Usage","text":"This page will guide you through simulating microbial consumer resource models (MiCRMs) including community parameter generation. In general simulation of microbial communities in MiCRM.jl are done in three steps:","category":"page"},{"location":"pages/overview/","page":"Basic Usage","title":"Basic Usage","text":"Generate community parameters\nDefine system dynamics\nSimulate system","category":"page"},{"location":"pages/overview/","page":"Basic Usage","title":"Basic Usage","text":"We will walkthrough the simulation of the basic MiCRM model given by the set of equations:","category":"page"},{"location":"pages/overview/","page":"Basic Usage","title":"Basic Usage","text":"beginaligned\n    fracdC_idt = sum_alpha = 0^M C_i R_alpha u_ialpha  (1 - lambda_alpha) - C_i m_i \n    fracdR_alphadt = rho_alpha - R_alpha omega_alpha - sum_i = 0^N C_i R_alpha u_ialpha + sum_i = 0^N sum_beta = 0^M C_i R_beta u_i beta l_beta alpha\nendaligned","category":"page"},{"location":"pages/overview/","page":"Basic Usage","title":"Basic Usage","text":"with parameters:","category":"page"},{"location":"pages/overview/","page":"Basic Usage","title":"Basic Usage","text":"Parameter Description Key\nC_i Biomass of the ith consumer -\nR_alpha Mass of the alphath resource -\nN Number of consumer populations N\nM Number of resources M\nu_i alpha Uptake rate of the alphath resource  by the ith consumer u\nm_i Loss term for the ith consumer m\nrho_alpha Inflow rate for the alphath resource ρ\nomega_alpha Outflow term for the jresource ω\nl_alpha beta Proportion of uptake of the alphath resource leaked to the betath resource. l\nlambda_alpha Total proportion of the alphath resource leaked, same as sum_beta l_alphabeta λ","category":"page"},{"location":"pages/overview/#Generating-Community-Parameters","page":"Basic Usage","title":"Generating Community Parameters","text":"","category":"section"},{"location":"pages/overview/","page":"Basic Usage","title":"Basic Usage","text":"The first step of any simulation is to generate a set of parameters for a given microbial community. MiCRM.jl stores all parameters in NamedTuples which are immutable (cannot be altered once created) making them fast and (as the name would suggest) indexable by name. This makes them easy to use in the derivative function. In this example we will consider a simple unstructured community where uptake and leakage values are randomly drawn from a dirchlet distribution and all other parameters are set to 1:","category":"page"},{"location":"pages/overview/","page":"Basic Usage","title":"Basic Usage","text":"    using Distributions\n\n    #set system size and leakage\n    N,M,leakage = 10,10,0.3\n\n    #uptake\n    du = Distributions.Dirichlet(N,1.0)\n    u = copy(rand(du, M)')\n\n    #cost term\n    m = ones(N)\n\n    #inflow + outflow\n    ρ,ω = ones(M),ones(M)\n\n    #leakage\n    l = copy(rand(du,M)' .* leakage)\n\n    param = (N = N, M = M, u = u, m = m, ρ = ρ, ω = ω, l = l, λ = leakage)","category":"page"},{"location":"pages/overview/","page":"Basic Usage","title":"Basic Usage","text":"In practice it is much more convenient to wrap this in a function. In MiCRM.jl this is all wrapped in the generate_params function. This function  takes various functions as arguments which define how the parameters in the model are generated  (see XXX for more detail). By default generate_params creates communities with random parameters as above. The code to generate a random community thus becomes:","category":"page"},{"location":"pages/overview/","page":"Basic Usage","title":"Basic Usage","text":"    using MiCRM\n\n    #set system size and leakage\n    N,M,leakage = 10,10,0.3\n\n    #generate community parameters\n    param = MiCRM.Parameters.generate_params(N,M,leakage)","category":"page"},{"location":"pages/overview/","page":"Basic Usage","title":"Basic Usage","text":"You can of course define your own functions to generate communities (see XXX for more detail). ","category":"page"},{"location":"pages/overview/#Defining-System-Dynamics","page":"Basic Usage","title":"Defining System Dynamics","text":"","category":"section"},{"location":"pages/overview/","page":"Basic Usage","title":"Basic Usage","text":"Once we have a set of parameters the next step is to define the dynamics of the community we want to simulate. MiCRM.jl allows the user to specify the  dynamics of the system they wish to simulate by passing custom functions to the MiCRM.Simulations.dx! function. This process is explained in more detail XXX but briefly the user can specify dynamics depending on the parameters created in the previous step as well as additional state variables to represent external drivers such as temperature. In this example we will use the default dynamics as described above and so we can just use the MiCRM.Simulations.dx! out of the box. ","category":"page"},{"location":"pages/overview/#Simulation","page":"Basic Usage","title":"Simulation","text":"","category":"section"},{"location":"pages/overview/","page":"Basic Usage","title":"Basic Usage","text":"Once we have the parameters and the derivative equation we are ready to simulate the system and integrate through time. MiCRM.jl relies heavily on the brilliant DifferentialEquations.jl to do the numerical integration and it is worth having a look at the docs to get an idea of what is going on under the hood in your simulations. The simulation procedure is fairly straightforward and just requires that we first create an ODEProblem object which defines the problem for the ODE solver and then solve it with the aptly named solve function. MiCRM.jl imports a lightweight version of the DifferentialEquations.jl package to use so these functions are available when we run using MiCRM. To define the ODEProblem we need to specify the initial state of the system as well as the timespan we want to simulate over:","category":"page"},{"location":"pages/overview/","page":"Basic Usage","title":"Basic Usage","text":"    #inital state\n    x0 = ones(N+M)\n    #time span\n    tspan = (0.0, 10.0)\n\n    #define problem\n    prob = ODEProblem(MiCRM.Simulations.dx!, x0, tspan, param)\n    sol = solve(prob, Tsit5())","category":"page"},{"location":"pages/overview/#Analysis","page":"Basic Usage","title":"Analysis","text":"","category":"section"},{"location":"pages/overview/","page":"Basic Usage","title":"Basic Usage","text":"Once the simulation is done ","category":"page"},{"location":"pages/library/public/","page":"-","title":"-","text":"Placeholder for package guide","category":"page"},{"location":"pages/parameters/community_generation/","page":"Parameter generators","title":"Parameter generators","text":"TBD: Contains info on the communtiy generation tools and the requirements they have. ","category":"page"},{"location":"pages/simulations/custom_dynamics/#Defining-System-Dynamics","page":"Custom Dynamics","title":"Defining System Dynamics","text":"","category":"section"},{"location":"pages/simulations/custom_dynamics/","page":"Custom Dynamics","title":"Custom Dynamics","text":"This page will explain how to define custom dynamics for ones MiCRM system","category":"page"},{"location":"pages/simulations/custom_dynamics/#Basic-Modifications","page":"Custom Dynamics","title":"Basic Modifications","text":"","category":"section"},{"location":"pages/simulations/custom_dynamics/","page":"Custom Dynamics","title":"Custom Dynamics","text":"We can do basic modifications such as including an alternative functional response of uptake","category":"page"},{"location":"pages/simulations/custom_dynamics/#Advanced-Modifications","page":"Custom Dynamics","title":"Advanced Modifications","text":"","category":"section"},{"location":"pages/simulations/custom_dynamics/","page":"Custom Dynamics","title":"Custom Dynamics","text":"We can also do advanced modifications such as including additional state variables ","category":"page"},{"location":"pages/parameters/coalescence/","page":"Coalescence","title":"Coalescence","text":"coalescence docs. ","category":"page"},{"location":"pages/library/internal/","page":"-","title":"-","text":"Placeholder for package guide","category":"page"},{"location":"pages/parameters/parameters/#Parameters","page":"Overview","title":"Parameters","text":"","category":"section"},{"location":"pages/parameters/parameters/","page":"Overview","title":"Overview","text":"The MiCRM.Parameters sub-module contains functions to automatically generate parameter sets for the MiCRM model. This page will detail the algorithms used to generate parameter combinations in the package. For the standard form of the MiCRM model they will return a NamedTuple with parameters listed in table below:","category":"page"},{"location":"pages/parameters/parameters/","page":"Overview","title":"Overview","text":"Parameter Description Key\nC_i Biomass of the ith consumer -\nR_alpha Mass of the alphath resource -\nN Number of consumer populations N\nM Number of resources M\nu_i alpha Uptake rate of the alphath resource  by the ith consumer u\nm_i Loss term for the ith consumer m\nrho_alpha Inflow rate for the alphath resource ρ\nomega_alpha Outflow term for the jresource ω\nl_alpha beta Proportion of uptake of the alphath resource leaked to the betath resource. l\nkw Additional parameters to be used ","category":"page"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = MiCRM","category":"page"},{"location":"#MiCRM.jl","page":"Home","title":"MiCRM.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Simulation of Microbial Consumer Resource (MiCRM) systems in julia.","category":"page"},{"location":"#Package-Features","page":"Home","title":"Package Features","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Random generation of random MiCRM systems\nStreamlined interface for MiCRM simulations\nCommunity coalescence ","category":"page"},{"location":"#Contents","page":"Home","title":"Contents","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Depth = 1","category":"page"},{"location":"","page":"Home","title":"Home","text":"Documentation for MiCRM.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"}]
}
